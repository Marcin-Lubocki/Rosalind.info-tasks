"""
From Rosalind.info:

Problem
A string is simply an ordered collection of symbols selected from some alphabet and formed into a word; the length of a string is the number of symbols that it contains.

An example of a length 21 DNA string (whose alphabet contains the symbols 'A', 'C', 'G', and 'T') is "ATGCTTCAGAAAGGTCTTACG."

Given: A DNA string s of length at most 1000 nt.

Return: Four integers (separated by spaces) counting the respective number of times that the symbols 'A', 'C', 'G', and 'T' occur in s.

Sample Dataset
AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC
Sample Output
20 12 17 21
"""

# input data from rosalind.info is storaged in "input.txt" file

# the count_nucleotides function takes DNA sequence as an argument and returns nucleotide counts in order as follow [A, C, G, T]
def count_nucleotides(dna):
  nucleotides = [0, 0, 0, 0]
  for nucleotide in dna:
    if nucleotide == "A":
      nucleotides[0] += 1
    elif nucleotide == "C":
      nucleotides[1] += 1
    elif nucleotide == "G":
      nucleotides[2] += 1
    elif nucleotide == "T":
      nucleotides[3] += 1
  return(' '.join(map(str, nucleotides)))

# "s" is the given DNA string
f = open("input.txt", "r")
s = f.readline()

print(count_nucleotides(s))
